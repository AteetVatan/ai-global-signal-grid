# ┌───────────────────────────────────────────────────────────────┐
# │  Copyright (c) 2025 Ateet Vatan Bahmani                       │
# │  Project: MASX AI – Strategic Agentic AI System               │
# │  All rights reserved.                                         │
# └───────────────────────────────────────────────────────────────┘
#
# MASX AI is a proprietary software system developed and owned by Ateet Vatan Bahmani.
# The source code, documentation, workflows, designs, and naming (including "MASX AI")
# are protected by applicable copyright and trademark laws.
#
# Redistribution, modification, commercial use, or publication of any portion of this
# project without explicit written consent is strictly prohibited.
#
# This project is not open-source and is intended solely for internal, research,
# or demonstration use by the author.
#
# Contact: ab@masxai.com | MASXAI.com

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================

# Environment name (development, staging, production)
ENVIRONMENT=development

# Enable debug mode (true/false)
DEBUG=true

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log format (json, text)
LOG_FORMAT=json

# Log file path
LOG_FILE=logs/masx.log

# Log rotation policy (daily, weekly, monthly)
LOG_ROTATION=daily

# Log retention in days
LOG_RETENTION=30

# =============================================================================
# API CONFIGURATION
# =============================================================================

# API host address
API_HOST=0.0.0.0

# API port number
API_PORT=8000

# Number of API workers
API_WORKERS=4

# API secret key for security (change in production!)
API_SECRET_KEY=change_this_in_production

# Enable API reload for development
API_RELOAD=false

# Enable API documentation (Swagger/ReDoc)
ENABLE_API_DOCS=true

# GSG API key for authentication
GSG_API_KEY=your-gsg-api-key-here

# Require API key for all endpoints (true/false)
REQUIRE_API_KEY=false

# =============================================================================
# DATABASE CONFIGURATION (SUPABASE)
# =============================================================================

# Supabase project URL
SUPABASE_URL=https://your-project.supabase.co

# Supabase anonymous key
SUPABASE_ANON_KEY=your-supabase-anon-key-here

# Supabase service role key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key-here

# Supabase database password
SUPABASE_DB_PASSWORD=your-database-password-here

# Supabase database URL
SUPABASE_DB_URL=postgresql://postgres:password@localhost:5432/postgres

# Maximum number of database connections
DATABASE_MAX_CONNECTIONS=10

# Minimum number of database connections
DATABASE_MIN_CONNECTIONS=1

# =============================================================================
# AI/ML PROVIDER CONFIGURATION
# =============================================================================

# OpenAI API key
OPENAI_API_KEY=your-openai-api-key-here

# OpenAI organization ID (optional)
OPENAI_ORG_ID=your-openai-org-id-here

# OpenAI model name
OPENAI_MODEL=gpt-4

# OpenAI temperature (0.0-2.0)
OPENAI_TEMPERATURE=0.7

# OpenAI max tokens
OPENAI_MAX_TOKENS=4096

# Anthropic API key
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Anthropic model name
ANTHROPIC_MODEL=claude-3-sonnet-20240229

# Anthropic temperature (0.0-2.0)
ANTHROPIC_TEMPERATURE=0.7

# Anthropic max tokens
ANTHROPIC_MAX_TOKENS=4096

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Maximum concurrent requests
MAX_CONCURRENT_REQUESTS=10

# Request timeout in seconds
REQUEST_TIMEOUT=30

# Number of retry attempts
RETRY_ATTEMPTS=3

# Retry delay in seconds
RETRY_DELAY=2

# Cache TTL in seconds
CACHE_TTL=3600

# Maximum memory usage (0.0-1.0)
MAX_MEMORY_USAGE=0.8

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# Enable content filtering (true/false)
ENABLE_CONTENT_FILTERING=true

# Maximum content length in bytes
MAX_CONTENT_LENGTH=10000

# =============================================================================
# MONITORING AND METRICS
# =============================================================================

# Enable metrics collection (true/false)
ENABLE_METRICS=true

# Metrics port
METRICS_PORT=9090

# Health check endpoint
HEALTH_CHECK_ENDPOINT=/health

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Enable hot reload in development (true/false)
ENABLE_HOT_RELOAD=true

# Enable debug toolbar (true/false)
ENABLE_DEBUG_TOOLBAR=false

# Enable SQL query logging (true/false)
ENABLE_SQL_LOGGING=false

# Test database URL
TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/test_db

# Mock external APIs in testing (true/false)
MOCK_EXTERNAL_APIS=false

# =============================================================================
# REDIS CACHE CONFIGURATION
# =============================================================================

# Redis host
REDIS_HOST=localhost

# Redis port
REDIS_PORT=6379

# Redis database number
REDIS_DB=0

# Redis password (optional)
REDIS_PASSWORD=

# Redis SSL (true/false)
REDIS_SSL=false

# =============================================================================
# WORKFLOW CONFIGURATION
# =============================================================================

# Daily run time for scheduled workflows (HH:MM)
DAILY_RUN_TIME=09:00

# Workflow timeout in seconds
WORKFLOW_TIMEOUT=300

# Maximum workflow retries
MAX_WORKFLOW_RETRIES=3

# Workflow queue size
WORKFLOW_QUEUE_SIZE=100

# =============================================================================
# SIGNAL PROCESSING CONFIGURATION
# =============================================================================

# Signal processing batch size
SIGNAL_BATCH_SIZE=1000

# Signal processing timeout in seconds
SIGNAL_TIMEOUT=60

# Enable real-time signal processing (true/false)
ENABLE_REALTIME_SIGNALS=true

# Signal cache TTL in seconds
SIGNAL_CACHE_TTL=1800

# =============================================================================
# EXTERNAL SERVICE CONFIGURATION
# =============================================================================

# GDELT API endpoint (if applicable)
GDELT_API_URL=https://api.gdeltproject.org

# GDELT API key (if required)
GDELT_API_KEY=your-gdelt-api-key-here

# External data source URL
EXTERNAL_DATA_URL=https://api.example.com

# External data source API key
EXTERNAL_DATA_API_KEY=your-external-api-key-here

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Email SMTP server
SMTP_SERVER=smtp.gmail.com

# Email SMTP port
SMTP_PORT=587

# Email username
SMTP_USERNAME=your-email@gmail.com

# Email password
SMTP_PASSWORD=your-email-password

# Enable email notifications (true/false)
ENABLE_EMAIL_NOTIFICATIONS=false

# Slack webhook URL
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url

# Enable Slack notifications (true/false)
ENABLE_SLACK_NOTIFICATIONS=false

# =============================================================================
# BACKUP AND STORAGE CONFIGURATION
# =============================================================================

# Backup storage path
BACKUP_STORAGE_PATH=./backups

# Enable automatic backups (true/false)
ENABLE_AUTO_BACKUP=false

# Backup frequency in hours
BACKUP_FREQUENCY=24

# Backup retention in days
BACKUP_RETENTION=30

# File storage path
FILE_STORAGE_PATH=./storage

# Maximum file size in bytes
MAX_FILE_SIZE=10485760

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Custom middleware configuration (JSON string)
CUSTOM_MIDDLEWARE_CONFIG={}

# Custom route configuration (JSON string)
CUSTOM_ROUTE_CONFIG={}

# Feature flags (JSON string)
FEATURE_FLAGS={"experimental_features": false, "beta_endpoints": false}

# Rate limiting configuration (JSON string)
RATE_LIMIT_CONFIG={"requests_per_minute": 60, "burst_size": 10}

# =============================================================================
# NOTES
# =============================================================================

# 1. Copy this file to .env and update the values
# 2. Never commit .env files to version control
# 3. Use strong, unique passwords and API keys in production
# 4. Regularly rotate API keys and secrets
# 5. Monitor log files for security events
# 6. Backup configuration files regularly
# 7. Test configuration changes in staging first 