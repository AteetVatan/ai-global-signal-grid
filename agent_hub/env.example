# ┌───────────────────────────────────────────────────────────────┐
# │  Copyright (c) 2025 Ateet Vatan Bahmani                      │
# │  Project: MASX AI – Strategic Agentic AI System              │
# │  All rights reserved.                                        │
# └───────────────────────────────────────────────────────────────┘
#
# MASX AI is a proprietary software system developed and owned by Ateet Vatan Bahmani.
# The source code, documentation, workflows, designs, and naming (including "MASX AI")
# are protected by applicable copyright and trademark laws.
#
# Redistribution, modification, commercial use, or publication of any portion of this
# project without explicit written consent is strictly prohibited.
#
# This project is not open-source and is intended solely for internal, research,
# or demonstration use by the author.
#
# Contact: ab@masxai.com | MASXAI.com

# =============================================================================
# MASX AI Global Signal Grid - Environment Configuration
# =============================================================================
# Copy this file to .env and update with your actual values
# =============================================================================

# =============================================================================
# Environment Configuration
# =============================================================================

# Environment: development, staging, production
ENVIRONMENT=development

# Enable debug mode (true/false)
DEBUG=true

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =============================================================================
# API Security Configuration
# =============================================================================

# GSG API key for authentication
GSG_API_KEY=your_gsg_api_key_here

# Require API key for all endpoints (true/false)
REQUIRE_API_KEY=false

# API secret key for security (change in production)
API_SECRET_KEY=change_this_in_production

# =============================================================================
# LLM Provider Configuration
# =============================================================================

# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4-turbo-preview
OPENAI_TEMPERATURE=0.0
OPENAI_MAX_TOKENS=4000

# Mistral AI Configuration
MISTRAL_API_KEY=your_mistral_api_key_here
MISTRAL_MODEL=mistral-small
MISTRAL_API_BASE=https://api.mistral.ai/v1
MISTRAL_TEMPERATURE=0.0
MISTRAL_MAX_TOKENS=4000
MISTRAL_TOKEN_REF=mistral-small

# =============================================================================
# Database Configuration (Supabase)
# =============================================================================

# Supabase project URL
SUPABASE_URL=https://your-project.supabase.co

# Supabase anonymous key
SUPABASE_ANON_KEY=your_supabase_anon_key_here

# Supabase service role key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# Supabase database password
SUPABASE_DB_PASSWORD=your_database_password_here

# Supabase database URL
SUPABASE_DB_URL=postgresql://postgres:password@db.your-project.supabase.co:5432/postgres

# Database connection pool settings
DATABASE_MAX_CONNECTIONS=10
DATABASE_MIN_CONNECTIONS=1

# =============================================================================
# External API Keys
# =============================================================================

# Google Custom Search API
GOOGLE_SEARCH_API_KEY=your_google_search_api_key_here
GOOGLE_CX=your_google_custom_search_engine_id_here
GOOGLE_SEARCH_BASE_URL=https://www.googleapis.com/customsearch/v1

# GDELT API Configuration
GDELT_API_KEY=your_gdelt_api_key_here
GDELT_API_URL=https://api.gdeltproject.org/api/v2

# Translation API Keys
GOOGLE_TRANSLATE_API_KEY=your_google_translate_api_key_here
DEEPL_API_KEY=your_deepl_api_key_here

# =============================================================================
# API Server Configuration
# =============================================================================

# API host address
API_HOST=0.0.0.0

# API port number
API_PORT=8000

# Number of API workers
API_WORKERS=4

# Enable API reload (true/false)
API_RELOAD=false

# =============================================================================
# Scheduling Configuration
# =============================================================================

# Daily run time (HH:MM format)
DAILY_RUN_TIME=00:00

# System timezone
TIMEZONE=UTC

# Enable internal scheduler (true/false)
ENABLE_SCHEDULER=true

# =============================================================================
# Feature Flags
# =============================================================================

# Enable GDELT integration (true/false)
USE_GDELT=true

# Enable translation services (true/false)
USE_TRANSLATOR=true

# Enable embedding generation (true/false)
USE_EMBEDDINGS=true

# Enable fact checking (true/false)
USE_FACT_CHECKING=true

# Enable parallel processing (true/false)
USE_PARALLEL_PROCESSING=true

# =============================================================================
# Performance Configuration
# =============================================================================

# Maximum concurrent requests
MAX_CONCURRENT_REQUESTS=10

# Request timeout in seconds
REQUEST_TIMEOUT=30

# Number of retry attempts
RETRY_ATTEMPTS=3

# Retry delay in seconds
RETRY_DELAY=2

# Cache TTL in seconds
CACHE_TTL=3600

# Maximum memory usage (0.0-1.0)
MAX_MEMORY_USAGE=0.8

# =============================================================================
# Flashpoint Configuration
# =============================================================================

# Flashpoint max iterations
FLASHPOINT_MAX_ITERATIONS=10

# Target number of flashpoints
TARGET_FLASHPOINTS=20

# Hotspot query for flashpoint detection
HOTSPOT_QUERY=global tension news last 24 hours

# =============================================================================
# Security Configuration
# =============================================================================

# Enable content filtering (true/false)
ENABLE_CONTENT_FILTERING=true

# Maximum content length
MAX_CONTENT_LENGTH=10000

# =============================================================================
# Monitoring and Logging
# =============================================================================

# Log format: json, text
LOG_FORMAT=json

# Log file path
LOG_FILE=logs/masx.log

# Log rotation policy: daily, weekly, monthly
LOG_ROTATION=daily

# Log retention in days
LOG_RETENTION=30

# Enable metrics collection (true/false)
ENABLE_METRICS=true

# Metrics port
METRICS_PORT=9090

# Health check endpoint
HEALTH_CHECK_ENDPOINT=/health

# =============================================================================
# Development Configuration
# =============================================================================

# Enable hot reload in development (true/false)
ENABLE_HOT_RELOAD=true

# Enable debug toolbar (true/false)
ENABLE_DEBUG_TOOLBAR=false

# Enable SQL query logging (true/false)
ENABLE_SQL_LOGGING=false

# Test database URL
TEST_DATABASE_URL=postgresql://test_user:test_pass@localhost:5432/test_db

# Mock external APIs in testing (true/false)
MOCK_EXTERNAL_APIS=false

# Enable API documentation (true/false)
ENABLE_API_DOCS=true

# =============================================================================
# Notes
# =============================================================================
# 
# 1. Replace all 'your_*_here' values with actual API keys and credentials
# 2. Never commit the actual .env file to version control
# 3. Use different API keys for development, staging, and production
# 4. Regularly rotate API keys and credentials
# 5. Monitor API usage and costs
# 6. Test all configurations in staging before production deployment
#
# =============================================================================
# Security Best Practices
# =============================================================================
#
# - Use strong, unique passwords for all services
# - Enable 2FA where available
# - Regularly audit API key permissions
# - Use environment-specific configurations
# - Monitor for suspicious activity
# - Keep dependencies updated
# - Use HTTPS in production
# - Implement proper rate limiting
#
# ============================================================================= 